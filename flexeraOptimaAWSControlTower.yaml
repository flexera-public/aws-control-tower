AWSTemplateFormatVersion: '2010-09-09'
Description: Flexera Optima Integration with AWS Control Tower
Parameters:
  externalId:
    Type: String
    Description: The Id of your Flexera Organization
  refreshToken:
    Type: String
    Description: RefreshToken from the Flexera Platform.
  s3Bucket:
    Type: String
    Description: The name of the S3 bucket where your Hourly Cost and Usage Report is stored.
Resources:
  OptimaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: Stack_Operations
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: StackSetInstanceCreate
                Effect: Allow
                Action:
                  - cloudformation:CreateStackInstances
                Resource: !Join [':',['arn:aws:cloudformation', !Ref 'AWS::Region', !Ref 'AWS::AccountId', 'stackset/*:*']]
              - Sid: StackSetCreate
                Effect: Allow
                Action:
                  - cloudformation:CreateStackSet
                  - cloudformation:DescribeStackSet
                Resource: '*'
              - Sid: S3Ops
                Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                Resource: 'arn:aws:s3:::*'
              - Sid: PassRole
                Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !Join [':', ['arn:aws:iam:', !Ref "AWS::AccountId", 'role/service-role/AWSControlTowerStackSetRole']]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  CreateS3Bucket:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: flexera-optima-controltower
        S3Key: optimacontroltower_s3_cur.zip
      Handler: index.lambda_handler
      MemorySize: 128
      Role: !GetAtt "OptimaRole.Arn"
      Runtime: ruby2.7
      Timeout: 60
      Environment:
        Variables:
            externalId: !Ref externalId
            refreshToken: !Ref refreshToken

  ConnectBillToOptima:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: flexera-optima-controltower
        S3Key: optimacontroltower_billconnect.zip
      Handler: index.lambda_handler
      MemorySize: 128
      Role: !GetAtt "OptimaRole.Arn"
      Runtime: dotnetcore3.1
      Timeout: 60
      Environment:
        Variables:
            externalId: !Ref externalId
            refreshToken: !Ref refreshToken

  OptimaLambdaPermission :
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt "CreateS3Bucket.Arn"
      Principal: AWS::AccountId
      SourceArn: !GetAtt "CreateS3Bucket.Arn"

  OptimaPolicyRole:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        PrincipalAws: AWS::AccountId
        RoleName: OptimaRole
        ExternalId: !Ref externalId
      TemplateURL: URL to your template

  OptimaAccessRole: 
        Type: AWS::CloudFormation::Stack
        Properties: 
            TemplateURL: "https://s3.amazonaws.com/optima-cft/FlexeraOptimaAccessRole.cft.json"
            TimeoutInMinutes: "60"
        
  

